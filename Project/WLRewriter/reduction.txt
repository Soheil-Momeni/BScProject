	 x -> IDENTIFIER 
l1
	 x -> IDENTIFIER 
l2
	 varlist -> x 
l2
	 varlist -> x , varlist 
l1, l2
	 c -> INL_KW varlist 
inL l1, l2
	 clist -> c 
inL l1, l2
	 x -> IDENTIFIER 
h1
	 x -> IDENTIFIER 
k
	 x -> IDENTIFIER 
n
	 varlist -> x 
n
	 varlist -> x , varlist 
k, n
	 varlist -> x , varlist 
h1, k, n
	 c -> INH_KW varlist 
inH h1, k, n
	 clist -> clist ; M c 
inL l1, l2; inH h1, k, n
	 x -> IDENTIFIER 
l1
	 exp -> x 
l1
	 n -> INTEGER_NUMBER 
0
	 exp -> n 
0
	 exp -> exp EQ_KW exp 
l1 == 0
	 x -> IDENTIFIER 
l2
	 x -> IDENTIFIER 
h1
	 exp -> x 
h1
	 x -> IDENTIFIER 
h1
	 exp -> x 
h1
	 exp -> exp PLUS_KW exp 
h1 + h1
	 x -> IDENTIFIER 
k
	 exp -> x 
k
	 exp -> exp PLUS_KW exp 
h1 + h1 + k
	 c -> x ASSIGN_KW exp 
l2 = h1 + h1 + k
	 clist -> c 
l2 = h1 + h1 + k
	 x -> IDENTIFIER 
l1
	 x -> IDENTIFIER 
l2
	 exp -> x 
l2
	 c -> x ASSIGN_KW exp 
l1 = l2
	 clist -> clist ; M c 
l2 = h1 + h1 + k; l1 = l2
	 c -> IF_KW exp THEN_KW M clist ENDIF_KW 
 if l1 == 0 then l2 = h1 + h1 + k; l1 = l2 endif
	 clist -> clist ; M c 
inL l1, l2; inH h1, k, n;  if l1 == 0 then l2 = h1 + h1 + k; l1 = l2 endif
	 program -> PROGRAM_KW ';' clist 
###Hooray! - Your program is syntactically correct### 
program; inL l1, l2; inH h1, k, n;  if l1 == 0 then l2 = h1 + h1 + k; l1 = l2 endif
