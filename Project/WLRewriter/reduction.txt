	 x -> IDENTIFIER 
h1
	 x -> IDENTIFIER 
h2
	 varlist -> x 
h2
	 varlist -> x , varlist 
h1, h2
	 c -> INH_KW varlist 
inH h1, h2
	 clist -> c 
inH h1, h2
	 x -> IDENTIFIER 
l1
	 x -> IDENTIFIER 
l2
	 x -> IDENTIFIER 
l3
	 varlist -> x 
l3
	 varlist -> x , varlist 
l2, l3
	 varlist -> x , varlist 
l1, l2, l3
	 c -> INL_KW varlist 
inL l1, l2, l3
	 clist -> clist ; M c 
inH h1, h2; inL l1, l2, l3
	 x -> IDENTIFIER 
l1
	 exp -> x 
l1
	 n -> INTEGER_NUMBER 
0
	 exp -> n 
0
	 exp -> exp LE_KW exp 
l1 <= 0
	 exp -> LPAR_KW exp RPAR_KW 
(l1 <= 0)
	 x -> IDENTIFIER 
l2
	 x -> IDENTIFIER 
h1
	 exp -> x 
h1
	 c -> x ASSIGN_KW exp 
l2 = h1
	 clist -> c 
l2 = h1
	 x -> IDENTIFIER 
l1
	 c -> OUTL_KW x 
outL l1
	 clist -> clist ; M c 
l2 = h1; outL l1
	 x -> IDENTIFIER 
l2
	 c -> OUTL_KW x 
outL l2
	 clist -> clist ; M c 
l2 = h1; outL l1; outL l2
	 x -> IDENTIFIER 
h2
	 exp -> x 
h2
	 x -> IDENTIFIER 
h1
	 exp -> x 
h1
	 exp -> exp EQ_KW exp 
h2 == h1
	 exp -> LPAR_KW exp RPAR_KW 
(h2 == h1)
	 x -> IDENTIFIER 
l3
	 n -> INTEGER_NUMBER 
0
	 exp -> n 
0
	 c -> x ASSIGN_KW exp 
l3 = 0
	 clist -> c 
l3 = 0
	 x -> IDENTIFIER 
l1
	 c -> OUTL_KW x 
outL l1
	 clist -> clist ; M c 
l3 = 0; outL l1
	 x -> IDENTIFIER 
l1
	 n -> INTEGER_NUMBER 
1
	 exp -> n 
1
	 c -> x ASSIGN_KW exp 
l1 = 1
	 clist -> c 
l1 = 1
	 c -> IF_KW exp THEN_KW M clist ELSE_KW N M clist ENDIF_KW 
 if (h2 == h1) then l3 = 0; outL l1 else l1 = 1 endif 
	 clist -> c 
 if (h2 == h1) then l3 = 0; outL l1 else l1 = 1 endif 
	 x -> IDENTIFIER 
l1
	 c -> OUTL_KW x 
outL l1
	 clist -> clist ; M c 
 if (h2 == h1) then l3 = 0; outL l1 else l1 = 1 endif ; outL l1
	 x -> IDENTIFIER 
l3
	 exp -> x 
l3
	 n -> INTEGER_NUMBER 
0
	 exp -> n 
0
	 exp -> exp EQ_KW exp 
l3 == 0
	 exp -> LPAR_KW exp RPAR_KW 
(l3 == 0)
	 x -> IDENTIFIER 
l3
	 n -> INTEGER_NUMBER 
1
	 exp -> n 
1
	 c -> x ASSIGN_KW exp 
l3 = 1
	 clist -> c 
l3 = 1
	 c -> IF_KW exp THEN_KW M clist ENDIF_KW 
 if (l3 == 0) then l3 = 1 endif
	 clist -> clist ; M c 
 if (h2 == h1) then l3 = 0; outL l1 else l1 = 1 endif ; outL l1;  if (l3 == 0) then l3 = 1 endif
	 c -> IF_KW exp THEN_KW M clist ELSE_KW N M clist ENDIF_KW 
 if (l1 <= 0) then l2 = h1; outL l1; outL l2 else  if (h2 == h1) then l3 = 0; outL l1 else l1 = 1 endif ; outL l1;  if (l3 == 0) then l3 = 1 endif endif 
	 clist -> clist ; M c 
inH h1, h2; inL l1, l2, l3;  if (l1 <= 0) then l2 = h1; outL l1; outL l2 else  if (h2 == h1) then l3 = 0; outL l1 else l1 = 1 endif ; outL l1;  if (l3 == 0) then l3 = 1 endif endif 
	 x -> IDENTIFIER 
l3
	 c -> OUTL_KW x 
outL l3
	 clist -> clist ; M c 
inH h1, h2; inL l1, l2, l3;  if (l1 <= 0) then l2 = h1; outL l1; outL l2 else  if (h2 == h1) then l3 = 0; outL l1 else l1 = 1 endif ; outL l1;  if (l3 == 0) then l3 = 1 endif endif ; outL l3
	 program -> PROGRAM_KW ';' clist 
###Hooray! - Your program is syntactically correct### 
program; inH h1, h2; inL l1, l2, l3;  if (l1 <= 0) then l2 = h1; outL l1; outL l2 else  if (h2 == h1) then l3 = 0; outL l1 else l1 = 1 endif ; outL l1;  if (l3 == 0) then l3 = 1 endif endif ; outL l3
