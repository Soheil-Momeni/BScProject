	 x -> IDENTIFIER 
l1
	 x -> IDENTIFIER 
l2
	 varlist -> x 
l2
	 varlist -> x , varlist 
l1, l2
	 c -> INL_KW varlist 
inL l1, l2
	 clist -> c 
inL l1, l2
	 x -> IDENTIFIER 
l1
	 exp -> x 
l1
	 x -> IDENTIFIER 
l3
	 exp -> x 
l3
	 exp -> exp LT_KW exp 
l1 < l3
	 x -> IDENTIFIER 
l1
	 x -> IDENTIFIER 
l2
	 exp -> x 
l2
	 n -> INTEGER_NUMBER 
2
	 exp -> n 
2
	 exp -> exp PLUS_KW exp 
l2 + 2
	 c -> x ASSIGN_KW exp 
l1 = l2 + 2
	 clist -> c 
l1 = l2 + 2
	 c -> WHILE_KW exp DO_KW M clist DONE_KW 
while l1 < l3 do l1 = l2 + 2 done 
	 clist -> clist ; M c 
inL l1, l2; while l1 < l3 do l1 = l2 + 2 done 
	 x -> IDENTIFIER 
l2
	 c -> OUTL_KW x 
outL l2
	 clist -> clist ; M c 
inL l1, l2; while l1 < l3 do l1 = l2 + 2 done ; outL l2
	 program -> PROGRAM_KW ';' clist 
###Hooray! - Your program is syntactically correct### 
program; inL l1, l2; while l1 < l3 do l1 = l2 + 2 done ; outL l2
